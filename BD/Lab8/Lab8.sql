create table AUDITORIUM_TYPE (
AUDITORIUM_TYPE char(20) constraint AUDITORIUM_TYPE_PK primary key,
AUDITORIUM_TYPENAME varchar2(60) constraint AUDITORIUM_TYPENAME_NOT_NULL not null
);

create table AUDITORIUM (
AUDITORIUM char(20) primary key, -- код аудитории
AUDITORIUM_NAME varchar2(200), -- аудитория
AUDITORIUM_CAPACITY number(4), -- вместимость
AUDITORIUM_TYPE char(20) not null -- тип аудитории
references AUDITORIUM_TYPE(AUDITORIUM_TYPE)
);

CREATE TABLE FACULTY (
FACULTY CHAR(20) NOT NULL,
FACULTY_NAME VARCHAR2(200),
CONSTRAINT PK_FACULTY PRIMARY KEY(FACULTY)
);

CREATE TABLE PULPIT (
PULPIT CHAR(20) NOT NULL,
PULPIT_NAME VARCHAR2(200),
FACULTY CHAR(20) NOT NULL,
CONSTRAINT FK_PULPIT_FACULTY FOREIGN KEY(FACULTY) REFERENCES FACULTY(FACULTY),
CONSTRAINT PK_PULPIT PRIMARY KEY(PULPIT)
);

CREATE TABLE TEACHER (
TEACHER CHAR(20) NOT NULL,
TEACHER_NAME VARCHAR2(200),
PULPIT CHAR(20) NOT NULL,
CONSTRAINT PK_TEACHER PRIMARY KEY(TEACHER),
CONSTRAINT FK_TEACHER_PULPIT FOREIGN KEY(PULPIT) REFERENCES PULPIT(PULPIT)
);

CREATE TABLE SUBJECT (
SUBJECT CHAR(20) NOT NULL,
SUBJECT_NAME VARCHAR2(200) NOT NULL,
PULPIT CHAR(20) NOT NULL,
CONSTRAINT PK_SUBJECT PRIMARY KEY(SUBJECT),
CONSTRAINT FK_SUBJECT_PULPIT FOREIGN KEY(PULPIT) REFERENCES PULPIT(PULPIT)
);

-- Заполняем таблицу AUDITORIUM_TYPE
insert into AUDITORIUM_TYPE (AUDITORIUM_TYPE, AUDITORIUM_TYPENAME )
values ('ЛК', 'Лекционная');
insert into AUDITORIUM_TYPE (AUDITORIUM_TYPE, AUDITORIUM_TYPENAME )
values ('ЛБ-К', 'Компьютерный класс');
insert into AUDITORIUM_TYPE (AUDITORIUM_TYPE, AUDITORIUM_TYPENAME )
values ('ЛК-К', 'Лекционная с уст. компьютерами');
insert into AUDITORIUM_TYPE (AUDITORIUM_TYPE, AUDITORIUM_TYPENAME )
values ('ЛБ-X', 'Химическая лаборатория');
insert into AUDITORIUM_TYPE (AUDITORIUM_TYPE, AUDITORIUM_TYPENAME )
values ('ЛБ-СК', 'Спец. компьютерный класс');

-- Заполняем таблицу AUDITORIUM
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('206-1', '206-1', 'ЛБ-К', 15);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY)
values ('301-1', '301-1', 'ЛБ-К', 15);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('236-1', '236-1', 'ЛК', 60);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('313-1', '313-1', 'ЛК', 60);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('324-1', '324-1', 'ЛК', 50);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('413-1', '413-1', 'ЛБ-К', 15);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('423-1', '423-1', 'ЛБ-К', 90);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('408-2', '408-2', 'ЛК', 90);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('103-4', '103-4', 'ЛК', 90);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('105-4', '105-4', 'ЛК', 90);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('107-4', '107-4', 'ЛК', 90);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('110-4', '110-4', 'ЛК', 30);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('111-4', '111-4', 'ЛК', 30);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('114-4', '114-4', 'ЛК-К', 90 );
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('132-4', '132-4', 'ЛК', 90);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('02Б-4', '02Б-4', 'ЛК', 90);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('229-4', '229-4', 'ЛК', 90);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('304-4', '304-4','ЛБ-К', 90);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('314-4', '314-4', 'ЛК', 90);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('320-4', '320-4', 'ЛК', 90);
insert into AUDITORIUM (AUDITORIUM, AUDITORIUM_NAME, AUDITORIUM_TYPE, AUDITORIUM_CAPACITY )
values ('429-4', '429-4', 'ЛК', 90);

-- Заполняем таблицу FACULTY
insert into FACULTY (FACULTY, FACULTY_NAME )
values ('ИДиП', 'Издателькое дело и полиграфия');
insert into FACULTY (FACULTY, FACULTY_NAME )
values ('ХТиТ', 'Химическая технология и техника');
insert into FACULTY (FACULTY, FACULTY_NAME )
values ('ЛХФ', 'Лесохозяйственный факультет');
insert into FACULTY (FACULTY, FACULTY_NAME )
values ('ИЭФ', 'Инженерно-экономический факультет');
insert into FACULTY (FACULTY, FACULTY_NAME )
values ('ТТЛП', 'Технология и техника лесной промышленности');
insert into FACULTY (FACULTY, FACULTY_NAME )
values ('ТОВ', 'Технология органических веществ');

-- Заполняем таблицу PULPIT
insert into PULPIT (PULPIT, PULPIT_NAME, FACULTY )
values ('ИСиТ', 'Иформационный систем и технологий ', 'ИДиП' );
insert into PULPIT (PULPIT, PULPIT_NAME, FACULTY )
values ('ПОиСОИ', 'Полиграфического оборудования и систем обработки информации ', 'ИДиП' );
insert into PULPIT (PULPIT, PULPIT_NAME, FACULTY)
values ('ЛВ', 'Лесоводства', 'ЛХФ') ;
insert into PULPIT (PULPIT, PULPIT_NAME, FACULTY)
values ('ОВ', 'Охотоведения', 'ЛХФ') ;
insert into PULPIT (PULPIT, PULPIT_NAME, FACULTY)
values ('ЛУ', 'Лесоустройства', 'ЛХФ');
insert into PULPIT (PULPIT, PULPIT_NAME, FACULTY)
values ('ЛЗиДВ', 'Лесозащиты и древесиноведения', 'ЛХФ');
insert into PULPIT (PULPIT, PULPIT_NAME, FACULTY)
values ('ЛПиСПС', 'Ландшафтного проектирования и садово-паркового строительства','ЛХФ');
insert into PULPIT (PULPIT, PULPIT_NAME, FACULTY)
values ('ТЛ', 'Транспорта леса', 'ТТЛП');
insert into PULPIT (PULPIT, PULPIT_NAME, FACULTY)
values ('ЛМиЛЗ', 'Лесных машин и технологии лесозаготовок', 'ТТЛП');
insert into PULPIT (PULPIT, PULPIT_NAME, FACULTY)
values ('ОХ', 'Органической химии', 'ТОВ');
insert into PULPIT (PULPIT, PULPIT_NAME, FACULTY)
values ('ТНХСиППМ','Технологии нефтехимического синтеза и переработки полимерных материалов','ТОВ');
insert into PULPIT (PULPIT, PULPIT_NAME, FACULTY)
values ('ТНВиОХТ','Технологии неорганических веществ и общей химической технологии ','ХТиТ');
insert into PULPIT (PULPIT, PULPIT_NAME, FACULTY)
values ('ХТЭПиМЭЕ','Химии, технологии электрохимических производств и материалов электронной техники', 'ХТиТ');
insert into PULPIT (PULPIT, PULPIT_NAME, FACULTY)
values ('ЭТиМ', 'экономической теории и маркетинга', 'ИЭФ');
insert into PULPIT (PULPIT, PULPIT_NAME, FACULTY)
values ('МиЭП', 'Менеджмента и экономики природопользования', 'ИЭФ');

-- Заполняем таблицу TEACHER
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('СМЛВ', 'Смелов Владимир Владиславович', 'ИСиТ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('АКНВЧ', 'Акунович Станислав Иванович', 'ИСиТ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('КЛСНВ', 'Колесников Леонид Валерьевич', 'ИСиТ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('ГРМН', 'Герман Олег Витольдович', 'ИСиТ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('ЛЩНК', 'Лащенко Анатолий Пвалович', 'ИСиТ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('БРКВЧ', 'Бракович Андрей Игорьевич', 'ИСиТ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('ДДК', 'Дедко Александр Аркадьевич', 'ИСиТ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('КБЛ', 'Кабайло Александр Серафимович', 'ИСиТ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('УРБ', 'Урбанович Павел Павлович', 'ИСиТ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('РМНК', 'Романенко Дмитрий Михайлович', 'ИСиТ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('ПСТВЛВ', 'Пустовалова Наталия Николаевна', 'ИСиТ' );
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('?', 'Неизвестный', 'ИСиТ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('ГРН', 'Гурин Николай Иванович', 'ИСиТ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('ЖЛК', 'Жиляк Надежда Александровна', 'ИСиТ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('БРТШВЧ', 'Барташевич Святослав Александрович', 'ПОиСОИ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('ЮДНКВ', 'Юденков Виктор Степанович', 'ПОиСОИ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('БРНВСК', 'Барановский Станислав Иванович', 'ЭТиМ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('НВРВ', 'Неверов Александр Васильевич', 'МиЭП');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('РВКЧ', 'Ровкач Андрей Иванович', 'ОВ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('ДМДК', 'Демидко Марина Николаевна', 'ЛПиСПС');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('МШКВСК', 'Машковский Владимир Петрович', 'ЛУ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('ЛБХ', 'Лабоха Константин Валентинович', 'ЛВ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('ЗВГЦВ', 'Звягинцев Вячеслав Борисович', 'ЛЗиДВ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('БЗБРДВ', 'Безбородов Владимир Степанович', 'ОХ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('ПРКПЧК', 'Прокопчук Николай Романович', 'ТНХСиППМ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('НСКВЦ', 'Насковец Михаил Трофимович', 'ТЛ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('МХВ', 'Мохов Сергей Петрович', 'ЛМиЛЗ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('ЕЩНК', 'Ещенко Людмила Семеновна', 'ТНВиОХТ');
insert into TEACHER (TEACHER, TEACHER_NAME, PULPIT )
values ('ЖРСК', 'Жарский Иван Михайлович', 'ХТЭПиМЭЕ');

-- Заполняем таблицу SUBJECT
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('СУБД', 'Системы управления базами данных', 'ИСиТ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT)
values ('БД', 'Базы данных', 'ИСиТ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ИНФ', 'Информацтонные технологии', 'ИСиТ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ОАиП', 'Основы алгоритмизации и программирования', 'ИСиТ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ПЗ', 'Представление знаний в компьютерных системах', 'ИСиТ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ПСП', 'Пограммирование сетевых приложений', 'ИСиТ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('МСОИ', 'Моделирование систем обработки информации', 'ИСиТ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ПИС', 'Проектирование информационных систем', 'ИСиТ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('КГ', 'Компьютерная геометрия ', 'ИСиТ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ПМАПЛ', 'Полиграфические машины, автоматы и поточные линии', 'ПОиСОИ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('КМС', 'Компьютерные мультимедийные системы', 'ИСиТ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ОПП', 'Организация полиграфического производства', 'ПОиСОИ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT)
values ('ДМ', 'Дискретная матеатика', 'ИСиТ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('МП', 'Математисеское программирование', 'ИСиТ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ЛЭВМ', 'Логические основы ЭВМ', 'ИСиТ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ООП', 'Объектно-ориентированное программирование', 'ИСиТ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ЭП', 'Экономика природопользования', 'МиЭП');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ЭТ', 'Экономическая теория', 'ЭТиМ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('БЛЗиПсOO','Биология лесных зверей и птиц с осн. охотов.', 'ОВ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ОСПиЛПХ','Основы садовопаркового и лесопаркового хозяйства', 'ЛПиСПС');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ИГ', 'Инженерная геодезия ', 'ЛУ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ЛВ', 'Лесоводство', 'ЛЗиДВ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ОХ', 'Органическая химия', 'ОХ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ТРИ', 'Технология резиновых изделий', 'ТНХСиППМ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ВТЛ', 'Водный транспорт леса', 'ТЛ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ТиОЛ', 'Технология и оборудование лесозаготовок', 'ЛМиЛЗ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ТОПИ', 'Технология обогащения полезных ископаемых ', 'ТНВиОХТ');
insert into SUBJECT (SUBJECT, SUBJECT_NAME, PULPIT )
values ('ПЭХ', 'Прикладная электрохимия', 'ХТЭПиМЭЕ');

select table_name from all_tables where owner = 'KNI';

drop table AUDITORIUM_TYPE;
drop table AUDITORIUM;
drop table FACULTY;
drop table PULPIT;
drop table TEACHER;
drop table SUBJECT;

-- 1. Разработайте простейший анонимный блок PL/SQL (АБ), не содержащий операторов.

BEGIN
  NULL;
END;

-- 2. Разработайте АБ, выводящий «Hello World!». Выполните его в SQLDev и SQL+.

DECLARE
BEGIN
  DBMS_OUTPUT.PUT_LINE('Hello World!');
END;
/

-- 3. Продемонстрируйте работу исключения и встроенных функций sqlerrm, sqlcode.

DECLARE
  v_num NUMBER;
BEGIN
  v_num := 1/0;
EXCEPTION
  WHEN OTHERS THEN
    DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
    DBMS_OUTPUT.PUT_LINE('Error code: ' || SQLCODE);
end;

-- 4. Разработайте вложенный блок. Продемонстрируйте принцип обработки исключений во вложенных блоках.

DECLARE
  v_num NUMBER;
BEGIN
  declare
  begin
    v_num := 1/0;
  exception
    when others then
      dbms_output.put_line('Error: ' || sqlerrm);
      dbms_output.put_line('Error code: ' || sqlcode);
  end;
  dbms_output.put_line('Hello World!');
end;

-- 5. Выясните, какие типы предупреждения компилятора поддерживаются в данный момент.
select
  type,
  value
from
  v_$parameter
where
  name = 'plsql_warnings';

-- 6. Разработайте скрипт, позволяющий просмотреть все спецсимволы PL/SQL.

select
  keyword
from
  V_$RESERVED_WORDS
where
  LENGTH = 1 and
  KEYWORD <> 'A';

-- 7. Разработайте скрипт, позволяющий просмотреть все ключевые слова PL/SQL.

select
  keyword
from
  V_$RESERVED_WORDS
where
  LENGTH > 1 and
  keyword <> 'A'
order by keyword;

-- 8. Разработайте скрипт, позволяющий просмотреть все параметры Oracle Server, связанные с PL/SQL. 
-- Просмотрите эти же параметры с помощью SQL+-команды show.
select
  name,
  value
from
  v_$parameter
where
  name like 'plsql%';
  
show parameter plsql;

-- 9. Разработайте анонимный блок, демонстрирующий (выводящий в выходной серверный поток результаты):
-- 10. объявление и инициализацию целых number-переменных;

DECLARE
  v_num1 NUMBER := 1;
  v_num2 INTEGER := 2;
BEGIN
  DBMS_OUTPUT.PUT_LINE(v_num1);
  DBMS_OUTPUT.PUT_LINE(v_num2);
END;

-- 11. арифметические действия над двумя целыми number-переменных, включая деление с остатком;

DECLARE
  v_num1 NUMBER := 1;
  v_num2 NUMBER(3) := 2;
BEGIN
  DBMS_OUTPUT.PUT_LINE(v_num1 + v_num2);
  DBMS_OUTPUT.PUT_LINE(v_num1 - v_num2);
  DBMS_OUTPUT.PUT_LINE(v_num1 * v_num2);
  DBMS_OUTPUT.PUT_LINE(v_num1 / v_num2);
  DBMS_OUTPUT.PUT_LINE(v_num1 mod v_num2);
END;

-- 12. объявление и инициализацию number-переменных с фиксированной точкой;

DECLARE
  v_num1 NUMBER := 1.1;
  v_num2 NUMBER(3, 1) := 2.2;
BEGIN
  DBMS_OUTPUT.PUT_LINE(v_num1);
  DBMS_OUTPUT.PUT_LINE(v_num2);
END;

-- 13. объявление и инициализацию number-переменных с фиксированной точкой и отрицательным масштабом 
-- (округление);

DECLARE
  v_num1 NUMBER := 1.1;
  v_num2 NUMBER(3, -1) := 2.2;
BEGIN
  DBMS_OUTPUT.PUT_LINE(v_num1);
  DBMS_OUTPUT.PUT_LINE(v_num2); 
END;

-- 14. объявление и инициализацию BINARY_FLOAT-переменной;

DECLARE
  v_num BINARY_FLOAT := 1.1;
BEGIN
  DBMS_OUTPUT.PUT_LINE(v_num);
end;

-- 15. объявление и инициализацию BINARY_DOUBLE-переменной;

DECLARE
  v_num BINARY_DOUBLE := 1.1;
BEGIN
  DBMS_OUTPUT.PUT_LINE(v_num);
END;

-- 16. объявление number-переменных с точкой и применением символа E (степень 10) 
-- при инициализации/присвоении;

DECLARE
  v_num1 NUMBER := 1.1E1;
  v_num2 NUMBER := 1.1E-1;
BEGIN
  DBMS_OUTPUT.PUT_LINE(v_num1);
  DBMS_OUTPUT.PUT_LINE(v_num2);
END;

-- 17. объявление и инициализацию BOOLEAN-переменных

DECLARE
  v_bool BOOLEAN := TRUE;
BEGIN
  IF v_bool THEN
    DBMS_OUTPUT.PUT_LINE('TRUE');
  ELSE
    DBMS_OUTPUT.PUT_LINE('FALSE');
  END IF;
END;

-- 18. Разработайте анонимный блок PL/SQL содержащий объявление констант (VARCHAR2, CHAR, NUMBER). 
-- Продемонстрируйте возможные операции константами.

DECLARE
   v_varchar2_const CONSTANT VARCHAR2(20) := 'Hello World!';
   v_char_const CONSTANT CHAR(10) := 'ABC';
   v_number_const CONSTANT NUMBER := 10;

   v_concatenated_string VARCHAR2(30);
   v_sum_of_numbers NUMBER;
BEGIN
   v_concatenated_string := v_varchar2_const || ' PL/SQL Test';
   DBMS_OUTPUT.PUT_LINE(v_concatenated_string);

   v_concatenated_string := v_char_const || 'DEF';
   DBMS_OUTPUT.PUT_LINE(v_concatenated_string);

   v_sum_of_numbers := v_number_const + 5;
   DBMS_OUTPUT.PUT_LINE('Сумма чисел: ' || v_sum_of_numbers);
END;

-- 19. Разработайте АБ, содержащий объявления с опцией %TYPE. Продемонстрируйте действие опции.

DECLARE
  VCHAR_CONST CONSTANT VARCHAR2(20) := 'VCHAR_CONST';
  CHAR_CONST CONSTANT CHAR(20) := 'CHAR_CONST';
  NUMBER_CONST CONSTANT NUMBER := 1;
  VCHAR_CONST2 VCHAR_CONST%TYPE := 'VCHAR_CONST2';
  CHAR_CONST2 CHAR_CONST%TYPE := 'CHAR_CONST2';
  NUMBER_CONST2 NUMBER_CONST%TYPE := 2;
BEGIN
  DBMS_OUTPUT.PUT_LINE(VCHAR_CONST2);
  DBMS_OUTPUT.PUT_LINE(CHAR_CONST2);
  DBMS_OUTPUT.PUT_LINE(NUMBER_CONST2);
END;

-- 20. Разработайте АБ, содержащий объявления с опцией %ROWTYPE. Продемонстрируйте действие опции.

DECLARE
  AUDITORIUM_TYPE_ROW AUDITORIUM_TYPE%ROWTYPE;
BEGIN
  AUDITORIUM_TYPE_ROW.AUDITORIUM_TYPENAME := 'Аудитория';
  AUDITORIUM_TYPE_ROW.AUDITORIUM_TYPE := 'Auditorium';

  DBMS_OUTPUT.PUT_LINE(AUDITORIUM_TYPE_ROW.AUDITORIUM_TYPE);
  DBMS_OUTPUT.PUT_LINE(AUDITORIUM_TYPE_ROW.AUDITORIUM_TYPENAME);
end;

-- 21. Разработайте АБ, демонстрирующий все возможные конструкции оператора IF.

DECLARE
  v_num NUMBER := 1;
BEGIN
  IF v_num = 1 THEN
    DBMS_OUTPUT.PUT_LINE('v_num = 1');
  ELSIF v_num = 2 THEN
    DBMS_OUTPUT.PUT_LINE('v_num = 2');
  ELSIF v_num is null THEN
    DBMS_OUTPUT.PUT_LINE('v_num is null');
  ELSE
    DBMS_OUTPUT.PUT_LINE('v_num = 3');
  END IF;
END;

-- 22. Разработайте АБ, демонстрирующий все возможные конструкции оператора IF.
-- Повтор 21 )))

-- 23. Разработайте АБ, демонстрирующий работу оператора CASE.

DECLARE
  v_num NUMBER := 1;
BEGIN
  CASE v_num
    WHEN 1 THEN
      DBMS_OUTPUT.PUT_LINE('v_num = 1');
    WHEN 2 THEN
      DBMS_OUTPUT.PUT_LINE('v_num = 2');
    WHEN 3 THEN
      DBMS_OUTPUT.PUT_LINE('v_num = 3');
    ELSE
      DBMS_OUTPUT.PUT_LINE('v_num is null');
  END CASE;
END;

-- 24. Разработайте АБ, демонстрирующий работу оператора LOOP.

DECLARE
  v_num NUMBER := 1;
BEGIN
  LOOP
    DBMS_OUTPUT.PUT_LINE(v_num);
    v_num := v_num + 1;
    EXIT WHEN v_num > 10;
  END LOOP;
END;

-- 25. Разработайте АБ, демонстрирующий работу оператора WHILE.

DECLARE
  v_num NUMBER := 1;
BEGIN
  WHILE v_num <= 10 LOOP
    DBMS_OUTPUT.PUT_LINE(v_num);
    v_num := v_num + 1;
  END LOOP;
END;

-- 26. Разработайте АБ, демонстрирующий работу оператора FOR.

DECLARE
  v_num NUMBER := 1;
BEGIN
  FOR i IN 1..10 LOOP
    DBMS_OUTPUT.PUT_LINE(i);
  END LOOP;
END;